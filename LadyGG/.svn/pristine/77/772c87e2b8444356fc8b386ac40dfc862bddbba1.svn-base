<template>
  <div class="edit">
    <div class="contain">
      <div class="student">
        <div class="title">学生卡</div>
        <div class="content">
          <div class="img" @click="selectImg">
            <img :src="imgUrl" alt>
            <!-- <mt-actionsheet :actions="actions" v-model="sheetVisible" cancelText="取消"></mt-actionsheet> -->
          </div>
          <div class="msg">
            <p>
              姓名:
              <input type="text" v-model="name" minlength="2" maxlength="14">
            </p>
            <p>
              年级:
              <input type="text" v-model="message[grade]" @focus="ShouPup">
              <mt-popup v-model="popupVisible" popup-transition="popup-fade" position="bottom">
                <mt-picker :slots="slots" @change="onValuesChange"></mt-picker>
              </mt-popup>
            </p>
          </div>
        </div>
      </div>
      <button class="save" @click="save(1)">保存并修改</button>
    </div>
  </div>
</template>
<script>
import { Toast } from "mint-ui";
import Qs from "qs";
import wx from "weixin-js-sdk";
let grade_strs = ["未设置", "初一", "初二", "初三", "高一", "高二", "高三"];
export default {
  data() {
    return {
      name: "",
      // imgUrl: "",
      grade: 0,
      // actions: [
      //   {
      //     name: "拍照",
      //     method: function() {}
      //   },
      //   {
      //     name: "从相册选择",
      //     method: function() {}
      //   }
      // ],
      // sheetVisible: false,
      //   picker组件
      message: grade_strs,
      slots: [
        {
          flex: 1,
          values: grade_strs,
          className: "slot1",
          textAlign: "center"
        }
      ],
      popupVisible: false
    };
  },
  created() {
    this.getInfo(1);
     var data = JSON.stringify({
      url: encodeURIComponent(location.href.split("#")[0])
    }); //截取url并转换成json格式

    // 发送请求，配置jssdk
     this.axios.post("/u/wx/message", data).then(res => {
      //发送请求
      console.log(res);
      wx.config({
        //配置jssdk
        debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
        appId: wx0b31bcd6cbe880a4, // 必填，公众号的唯一标识
        nonceStr: res.data.data.nonceStr, // 必填，生成签名的时间戳
        signature: res.data.data.signature, // 必填，生成签名的随机串
        timestamp: res.data.data.timestamp, // 必填，签名
        jsApiList: ["chooseImage", "uploadImage"] // 必填，需要使用的JS接口列表，我这里用到了"chooseImage", "uploadImage"两个接口
      });
    });
    
  },
  methods: {
    // 选择图片
    selectImg() {
      let that = this;
      // this.sheetVisible = true;
        wx.chooseImage({
        count: 1, // 默认9
        sizeType: ["compressed"], // 可以指定是原图还是压缩图，默认二者都有
        sourceType: ["album", "camera"], // 可以指定来源是相册还是相机，默认二者都有
        success: function(res) {
          var localIds = res.localIds[0]; // 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片
          wx.uploadImage({
            localId: localIds, // 需要上传的图片的本地ID，由chooseImage接口获得
            isShowProgressTips: 1, // 默认为1，显示进度提示
            success: function(res) {
              var serverId = res.serverId; // 返回图片的服务器端ID
              that.axios
                .post("/u/wx/picture" + serverId, { emulateJSON: true })
                .then(function(res) {
                  console.log(res.data.data);
                  that.imgUrl = res.data.data.avatarUrl;
                });
            }
          });
        }
      });
    },

    ShouPup() {
      this.popupVisible = true;
    },
    // 年级选择
    onValuesChange(picker, values) {
      this.grade = this.message.indexOf(values[0]);
      console.log(this.grade);
    },
    getInfo(id) {
      let that = this;
      this.axios
        .get(`/u/data/${id}`)
        .then(response => {
          console.log(response.data.data);
          if (response.data.code == 0) {
            that.imgUrl = response.data.data.headPhotoUrl;
            that.name = response.data.data.nickName;
            that.grade = response.data.data.grade;
          } else {
            alert(response.data.message);
          }
        })
        .catch(err => {
          console.log(err);
        });
    },
    // 保存
    save(id) {
      let that = this;
      let data = Qs.stringify({
        headPhotoUrl: this.imgUrl,
        nickName: this.name,
        grade: this.grade
      });
      this.axios
        .put(
          `/u/data/${id}?headPhotoUrl=${this.imgUrl}&nickName=${this.name}&grade=${this.grade}`)
        .then(response => {
          console.log(response.data);
          if (response.data.code == 0) {
            Toast({
              message: "保存成功",
              iconClass: "icon icon-success"
            });
            setTimeout(function() {
              that.$router.push({
                path: "/card"
              });
            }, 700);
          } else {
            alert(response.data.message);
          }
        })
        .catch(err => {
          console.log(err);
        });
    }
  }
};
</script>
<style lang="scss" scoped>
@import "../assets/style/public";
.edit {
  margin-top: $header_h;
  background-color: #fbf3d0;
  height: $height - $header_h;
  text-align: center;
  .contain {
    padding: 0.5rem 0.3rem;
    .student {
      background: url(../assets/images/bg_c.png) no-repeat;
      background-size: 100% 100%;
      text-align: center;
      .title {
        color: #c66d08;
        font-size: 0.42rem;
        padding: 0.5rem 0;
        font-weight: 700;
      }
      .content {
        padding: 0.5rem 0 0.8rem 1rem;
        display: flex;
        justify-content: space-between;
        .img {
          width: 1.8rem;
          height: 2rem;
          border: 2px solid #fcba1a;
          img {
            width: 1.8rem;
            height: 2rem;
          }
        }
        .msg {
          flex: 1;
          font-size: 0.34rem;
          font-weight: 700;
          text-align: left;
          padding-left: 0.5rem;
          display: flex;
          flex-direction: column;
          justify-content: space-between;

          p {
            color: #fcba1a;
          }
          input {
            @include inputStyle;
            width: 50%;
            margin-left: 0.1rem;
          }
          .mint-popup-bottom {
            width: 100%;
          }
        }
      }
    }
    .save {
      background: url(../assets/images/btn3.png) no-repeat;
      background-size: 100% 100%;
      border: 2px solid #5f2500;
      border-radius: 10px;
      text-align: center;
      padding: 0.2rem 0.3rem;
      margin-top: 1rem;
      color: #fff;
      font-size: 0.36rem;
    }
  }
}
</style>