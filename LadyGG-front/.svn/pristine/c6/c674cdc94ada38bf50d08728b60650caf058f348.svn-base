//声明变量myApp，给它Angular模块赖注入ui.router.
var myApp = angular.module("myApp", ['ngAnimate', 'ngSanitize', 'ui.bootstrap', 'ui.router', 'oc.lazyLoad']);
//声明把$stateProvider和$urlRouterProvider路由引擎作为函数参数传入，至此就可配置路由了
myApp.config(function ($stateProvider, $urlRouterProvider) {
    //默认页面
    $urlRouterProvider.when("", "/login");
    //封装懒加载
    var Llt = function (http) {
        return ['$ocLazyLoad', function ($ocLazyLoad) {
            return $ocLazyLoad.load(http)
        }]
    }
    //路由
    $stateProvider
        .state("login", { //登录页
            url: "/login",
            templateUrl: "Template/Login/login.html",
            controller: "loginCtrl",
            resolve: {
                loadMyCtrl: Llt(['js/controller/login.js', 'css/login.css'])
            }
        })
        .state("backstage", { //后台页
            url: "/backstage",
            templateUrl: "Template/Backstage/backstage.html",
            controller: "backstageCtrl",
            resolve: {
                loadMyCtrl: Llt(['js/controller/backstage.js', 'css/backstage.css'])
            }
        })
        .state("backstage.welcome", { //欢迎页
            url: "/welcome",
            templateUrl: "Template/Backstage/welcome.html",
            controller: "welcomeCtrl",
            resolve: {
                loadMyCtrl: Llt(['css/welcome.css'])
            }
        })
        .state("backstage.articleList", { //文章列表
            url: "/articleList",
            templateUrl: "Template/Content/articleList.html",
            controller: "articleListCtrl"
        })
        .state("backstage.articleDetail", { //文章查看、编辑、新增
            url: "/articleDetail",
            templateUrl: "Template/Content/articleDetail.html",
            controller: "articleDetailCtrl"
        })
        .state("backstage.videoList", { //视频列表
            ulr: "/videoList",
            templateUrl: "Template/Content/videoList.html",
            controller: "videoListCtrl"
        })
        .state("backstage.videoDetail", { //视频查看、编辑、新增
            url: "/videoDetail",
            templateUrl: "Template/Content/videoDetail.html",
            controller: "videoDetailCtrl"
        })
        .state("backstage.AC", { //账号管理
            url: "/AC",
            templateUrl: "Template/Administrator/AC.html",
            controller: "ACCtrl",
            resolve: {
                loadMyCtrl: Llt(['css/AC.css', 'js/controller/AC.js'])
            }
        })
        .state("backstage.ACDetail", { //账号新增、编辑
            url: "/ACDetail",
            templateUrl: "Template/ADministrator/ACDetail.html",
            controller: "ACDetailCtrl",
            resolve: {
                loadMyCtrl: Llt(['css/ACDetail.css', 'js/controller/ACDetail.js'])
            }
        })
        .state("backstage.RL", { //角色列表
            url: "/RL",
            templateUrl: "Template/ADministrator/RL.html",
            controller: "RLCtrl",
            resolve: {
                loadMyCtrl: Llt(['css/RL.css', 'js/controller/RL.js'])
            }

        })
        .state("backstage.RLDetail", { //角色新增、编辑
            url: "/RLDetail",
            templateUrl: "Template/ADministrator/RLDetail.html",
            controller: "RLDetailCtrl"
        })
        .state("backstage.PW", { //密码修改
            url: "/PW",
            templateUrl: "Template/ADministrator/PW.html",
            controller: "PWCtrl"
        })
        .state("backstage.MOD", { //模块管理
            url: "/MOD",
            templateUrl: "Template/ADministrator/MOD.html",
            controller: "MODCtrl"
        })
        .state("backstage.MODDetail", { //模块新增、编辑
            url: "/MODDetail",
            templateUrl: "Template/ADministrator/MODDetail.html",
            controller: "MODDetailCtrl"
        })
})